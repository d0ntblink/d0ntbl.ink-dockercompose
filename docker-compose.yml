version: "3.3"

services:
  #########################################
  ####      Traefik Proxy Setup        ####
  #########################################
  traefik:
    image: traefik:v2.4
    restart: always
    container_name: traefik
    ports:
      - "80:80" # <== http
      - "8080:8080" # <== :8080 is where the dashboard runs on
      - "443:443" # <== https
    command:
    #### These are the CLI commands that will configure Traefik and tell it how to work! ####
      ## API Settings - https://docs.traefik.io/operations/api/, endpoints - https://docs.traefik.io/operations/api/#endpoints ##
      - --api.insecure=true # <== Enabling insecure api, NOT RECOMMENDED FOR PRODUCTION
      - --api.dashboard=true # <== Enabling the dashboard to view services, middlewares, routers, etc...
      - --api.debug=true # <== Enabling additional endpoints for debugging and profiling
      ## Log Settings (options: ERROR, DEBUG, PANIC, FATAL, WARN, INFO) - https://docs.traefik.io/observability/logs/ ##
      - --log.level=DEBUG # <== Setting the level of the logs from traefik
      ## Provider Settings - https://docs.traefik.io/providers/docker/#provider-configuration ##
      - --providers.docker=true # <== Enabling docker as the provider for traefik
      - --providers.docker.exposedbydefault=false # <== Don't expose every container to traefik, only expose enabled ones
      - --providers.file.filename=/dynamic.yaml # <== Referring to a dynamic configuration file
      - --providers.docker.network=web # <== Operate on the docker network named web
      ## Entrypoints Settings - https://docs.traefik.io/routing/entrypoints/#configuration ##
      - --entrypoints.web.address=:80 # <== Defining an entrypoint for port :80 named web
      - --entrypoints.web-secured.address=:443 # <== Defining an entrypoint for https on port :443 named web-secured
      ## Certificate Settings (Let's Encrypt) -  https://docs.traefik.io/https/acme/#configuration-examples ##
      - --certificatesresolvers.mytlschallenge.acme.tlschallenge=true # <== Enable TLS-ALPN-01 to generate and renew ACME certs
      - --certificatesresolvers.mytlschallenge.acme.email=garshasb.kh@mail.com # <== Setting email for certs
      - --certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json # <== Defining acme file to store cert information
    volumes:
      - ./letsencrypt:/letsencrypt # <== Volume for certs (TLS)
      - /var/run/docker.sock:/var/run/docker.sock # <== Volume for docker admin
      - ./dynamic.yaml:/dynamic.yaml # <== Volume for dynamic conf file, **ref: line 27
    networks:
      - web # <== Placing traefik on the network named web, to access containers on this network
    labels:
    #### Labels define the behavior and rules of the traefik proxy for this container ####
      - "traefik.enable=true" # <== Enable traefik on itself to view dashboard and assign subdomain to view it
      - "traefik.http.routers.api.rule=Host(`monitor.d0ntbl.ink`)" # <== Setting the domain for the dashboard
      - "traefik.http.routers.api.service=api@internal" # <== Enabling the api to be a service to access
      - "traefik.http.routers.api.middlewares=mon-auth"
      - "traefik.http.middlewares.mon-auth.basicauth.users=d0ntblink:$$apr1$$XlFqqmrf$$MhkJS1brXe0lk50Tj4MnT."

  ########################################
  ####   Home Page Setup Container   #####
  ########################################
  home: # <== we aren't going to open :80 here because traefik is going to serve this on entrypoint 'web'
  ## :80 is already exposed from within the container ##
    image: d0ntblink/d0ntbl.ink:ladash
    restart: always
    container_name: home
    networks:
      - web
    labels:
      #### Labels define the behavior and rules of the traefik proxy for this container ####
      - "traefik.enable=true" # <== Enable traefik to proxy this container
      - "traefik.http.routers.home.rule=Host(`d0ntbl.ink`)" # <== Your Domain Name goes here for the http rule
      - "traefik.http.routers.home.entrypoints=web" # <== Defining the entrypoint for http, **ref: line 30
      # - "traefik.http.routers.home.middlewares=redirect@file" # <== This is a middleware to redirect to https
      # - "traefik.http.routers.home-secured.rule=Host(`d0ntbl.ink`)" # <== Your Domain Name for the https rule 
      # - "traefik.http.routers.home-secured.entrypoints=web-secured" # <== Defining entrypoint for https, **ref: line 31
      # - "traefik.http.routers.home-secured.tls.certresolver=mytlschallenge" # <== Defining certsresolvers for https

  ########################################
  ####  Python Tools Setup Container #####
  ########################################
  tools: # <== we aren't going to open :80 here because traefik is going to serve this on entrypoint 'web'
  ## :80 is already exposed from within the container ##
    image: d0ntblink/tools.d0ntbl.ink:ladash
    stdin_open: true # docker run -i
    tty: true        # docker run -t
    restart: always
    container_name: tools
    networks:
      - web
    labels:
      #### Labels define the behavior and rules of the traefik proxy for this container ####
      - "traefik.enable=true" # <== Enable traefik to proxy this container
      - "traefik.http.routers.tools.rule=Host(`tools.d0ntbl.ink`)" # <== Your Domain Name goes here for the http rule
      - "traefik.http.routers.tools.entrypoints=web" # <== Defining the entrypoint for http, **ref: line 30
      # - "traefik.http.routers.tools.middlewares=redirect@file" # <== This is a middleware to redirect to https
      # - "traefik.http.routers.tools-secured.rule=Host(`tools.d0ntbl.ink`)" # <== Your Domain Name for the https rule 
      # - "traefik.http.routers.tools-secured.entrypoints=web-secured" # <== Defining entrypoint for https, **ref: line 31
      # - "traefik.http.routers.tools-secured.tls.certresolver=mytlschallenge" # <== Defining certsresolvers for https

  ########################################
  ####         Docker Dashboard      #####
  ########################################
  dash: # <== we aren't going to open :80 here because traefik is going to serve this on entrypoint 'web'
  ## :80 is already exposed from within the container ##
    image: portainer/portainer-ce:2.1.1-alpine
    restart: always
    container_name: dash
    ports: 
      - "8000:8000"
    networks:
      - web
    volumes: 
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data 
    labels: 
      ### Labels define the behavior and rules of the traefik proxy for this container ####
      - "traefik.enable=true" # <== Enable traefik to proxy this container
      - "traefik.http.services.dash.loadbalancer.server.port=9000" #this machine exposes two ports so this is the GUI port
      - "traefik.http.routers.dash.rule=Host(`dash.d0ntbl.ink`)" # <== Your Domain Name goes here for the http rule
      - "traefik.http.routers.dash.entrypoints=web" # <== Defining the entrypoint for http, **ref: line 30

networks:
  web:
    external: true

volumes:
  portainer_data:
